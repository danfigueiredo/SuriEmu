CREATE TABLE Funcionario (
	ID INT NOT NULL AUTO_INCREMENT,
	CodigoFuncional VARCHAR(255) NOT NULL,
	Nome VARCHAR(255) NOT NULL,
	NomeJapones VARCHAR(255) NOT NULL,
	DataNascimento DATE NOT NULL,
	DataEntrada DATE,
	Descricao VARCHAR(255),
	ID_TIPO_FUNCIONARIO INT,
	ID_SALARIO_HORA INT,
	ID_SHAKAI_HOKEN INT,
	ID_SETOR INT,
	PRIMARY KEY (ID),
	CONSTRAINT FK_TIPO_FUNCIONARIO FOREIGN KEY (ID_TIPO_FUNCIONARIO) REFERENCES TipoFuncionario(ID),
	CONSTRAINT FK_SALARIO_HORA FOREIGN KEY (ID_SALARIO_HORA) REFERENCES SalarioHora(ID),
	CONSTRAINT FK_SHAKAI_HOKEN FOREIGN KEY (ID_SHAKAI_HOKEN) REFERENCES ShakaiHoken(ID),
	CONSTRAINT FK_SETOR FOREIGN KEY (ID_SETOR) REFERENCES Setor(ID)
);

CREATE TABLE TipoFuncionario (
	ID INT NOT NULL AUTO_INCREMENT,
	Nome VARCHAR(255) NOT NULL,
	Sigla VARCHAR(4) NOT NULL,
	HorasDeTrabalho DECIMAL NOT NULL,
	Descricao VARCHAR(255),
	PRIMARY KEY (ID)
);

INSERT INTO TipoFuncionario (Nome, HorasDeTrabalho, Descricao) VALUES ("Direct Worker", 8.0, NULL);
INSERT INTO TipoFuncionario (Nome, HorasDeTrabalho, Descricao) VALUES ("Direct Worker Part Time", 5.25, NULL);
INSERT INTO TipoFuncionario (Nome, HorasDeTrabalho, Descricao) VALUES ("Indirect Worker", 8.0, NULL);
INSERT INTO TipoFuncionario (Nome, HorasDeTrabalho, Descricao) VALUES ("Custo da Empresa", 8.0, NULL);

CREATE TABLE Absenteismo (
	ID INT NOT NULL AUTO_INCREMENT,
	Data DATE NOT NULL,
	Horas DECIMAL NOT NULL,
	ID_FUNCIONARIO INT NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT FK_FUNCIONARIO FOREIGN KEY (ID_FUNCIONARIO) REFERENCES Funcionario(ID)
);

CREATE TABLE FuncionarioAbsenteismo (
	ID_FUNCIONARIO INT NOT NULL,
	ID_ABSENTEISMO INT NOT NULL,
	CONSTRAINT FK_FUNCIONARIO FOREIGN KEY (ID_FUNCIONARIO) REFERENCES Funcionario(ID),
	CONSTRAINT FK_ABSENTEISMO FOREIGN KEY (ID_ABSENTEISMO) REFERENCES Absenteismo(ID)

);

CREATE TABLE ShakaiHoken (
	ID INT NOT NULL AUTO_INCREMENT,
	PorcentagemSeguroSaude DECIMAL,
	PorcentagemSeguroEnfermagem DECIMAL,
	PorcentagemAposentadoria DECIMAL,
	AnoDaVigencia INT,
	PRIMARY KEY (ID)
);

CREATE TABLE Desconto (
	ID INT NOT NULL AUTO_INCREMENT,
	Nome VARCHAR(255),
	Porcentagem DECIMAL,
	Valor DECIMAL,
	Descricao VARCHAR(255),
	isVigente BOOLEAN,
	PRIMARY KEY (ID)
);

CREATE TABLE FuncionarioDesconto (
	ID_FUNCIONARIO INT NOT NULL,
	ID_DESCONTO INT NOT NULL,
	CONSTRAINT FK_FUNCIONARIO_DESCONTO FOREIGN KEY (ID_FUNCIONARIO) REFERENCES Funcionario(ID),
	CONSTRAINT FK_DESCONTO_FUNCIONARIO FOREIGN KEY (ID_DESCONTO) REFERENCES Desconto(ID)
);

CREATE TABLE SalarioHora (
	ID INT NOT NULL AUTO_INCREMENT,
	ValorHora DECIMAL,
	Descricao VARCHAR(255),
	DataAlteracaoSalario DATE,
	PRIMARY KEY (ID)
);

CREATE TABLE Setor (
	ID INT NOT NULL AUTO_INCREMENT,
	CodigoSetor VARCHAR(255) NOT NULL,
	Nome VARCHAR(255) NOT NULL,
	Descricao VARCHAR(255),
	ID_DEPARTAMENTO INT NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT FK_DEPARTAMENTO FOREIGN KEY (ID_DEPARTAMENTO) REFERENCES Departamento(ID)
);

CREATE TABLE Departamento (
	ID INT NOT NULL AUTO_INCREMENT,
	CodigoDepartamento VARCHAR(255) NOT NULL,
	Nome VARCHAR(255) NOT NULL,
	Descricao VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE Orcamento (
	ID INT NOT NULL AUTO_INCREMENT,
	DiasUteis DECIMAL,
	HorasExtras DECIMAL,
	HorasNoturnas DECIMAL,
	ValorHora DECIMAL,
	ValorHoraExtra DECIMAL,
	AdicionalNoturno DECIMAL,
	ValorTotalHorasNormais DECIMAL,
	ValorTotalHorasExtras DECIMAL,
	ValorTotalAdicionalNoturno DECIMAL,
	ValorTotalFuncionario DECIMAL,
	PrevisaoDescontoFuncionario DECIMAL,
	ValorTotalMaoDeObra DECIMAL,
	ID_FUNCIONARIO INT NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT FK_FUNCIONARIO_ORCAMENTO FOREIGN KEY (ID_FUNCIONARIO) REFERENCES Funcionario(ID)
);

CREATE TABLE Custo (
	ID INT NOT NULL AUTO_INCREMENT,
	Nome VARCHAR(255),
	Valor DECIMAL,
	Descricao VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE OrcamentoCusto (
	ID_ORCAMENTO INT NOT NULL,
	ID_CUSTO INT NOT NULL,
	CONSTRAINT FK_ORCAMENTO_CUSTO FOREIGN KEY (ID_ORCAMENTO) REFERENCES Orcamento(ID),
	CONSTRAINT FK_CUSTO FOREIGN KEY (ID_CUSTO) REFERENCES Custo(ID)
);
